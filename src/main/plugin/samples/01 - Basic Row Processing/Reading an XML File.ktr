<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>Reading an XML File</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2011&#47;02&#47;20 16:24:37.512</created_date>
  <modified_user>-</modified_user>
  <modified_date>2011&#47;02&#47;20 16:24:37.512</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>This step reads the XML file at:
&lt;kettle-dir&gt;&#47;plugins&#47;steps&#47;Ruby&#47;sample_files&#47;system_monitor.xml</note>
      <xloc>76</xloc>
      <yloc>54</yloc>
      <width>390</width>
      <heigth>48</heigth>
      <fontname>Arial</fontname>
      <fontsize>13</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <order>
  <hop> <from>Read System Monitor XML File</from><to>output</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Read System Monitor XML File</name>
    <type>RubyStep</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
	<scripts>
		<script>
			<title>Ruby Script</title>
			<body>################################################################################
# Ruby Scripting Step for Kettle 
# Created by Slawomir Chodnicki 
# http:&#47;&#47;type-exit.org
################################################################################
# This script uses the Ruby standard XML library REXML to read an XML file. 
# The file is reporting the well-being of a computer system using a few metrics.
# Please note that each measurement is split across multiple metric tags, 
# which makes the file a bit tedious to work with, since there is no single
# loop path that would iterate through all the data points.
#
# The structure of the file: 
#
# &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
# &lt;data&gt;
#   &lt;system&gt;test system&lt;&#47;system&gt;
#   &lt;metric name=&quot;time&quot; type=&quot;timestamp&quot;&gt;
#     &lt;value&gt;1292231700&lt;&#47;value&gt;
#     &lt;value&gt;1292232000&lt;&#47;value&gt;
#  	  ...
#   &lt;&#47;metric&gt;
#   &lt;metric name=&quot;active_cpu&quot; type=&quot;int&quot;&gt;
#     &lt;value&gt;2&lt;&#47;value&gt;
#     &lt;value&gt;2&lt;&#47;value&gt;
#     ...
#   &lt;&#47;metric&gt;
#   &lt;metric name=&quot;cpu_util&quot; type=&quot;float&quot;&gt;
#     &lt;value&gt;9.58&lt;&#47;value&gt;
#     &lt;value&gt;0.43&lt;&#47;value&gt;
#     ...
#   &lt;&#47;metric&gt;
#   &lt;metric name=&quot;mem_util&quot; type=&quot;float&quot;&gt;
#     &lt;value&gt;26.58&lt;&#47;value&gt;
#     &lt;value&gt;27.47&lt;&#47;value&gt;
#  	 ...
#   &lt;&#47;metric&gt;
#   &lt;metric name=&quot;run_queue&quot; type=&quot;float&quot;&gt;
#     &lt;value&gt;0&lt;&#47;value&gt;
#     &lt;value&gt;0&lt;&#47;value&gt;
# 	 ...
#   &lt;&#47;metric&gt;
#   &lt;metric name=&quot;swap_util&quot; type=&quot;float&quot;&gt;
#     &lt;value&gt;23.9&lt;&#47;value&gt;
#     &lt;value&gt;24.68&lt;&#47;value&gt;
# 	 ...
#    &lt;&#47;metric&gt;
# &lt;&#47;data&gt;
################################################################################

require &apos;rexml&#47;document&apos;
include REXML

# The demo file is plugins&#47;steps&#47;Ruby&#47;sample_files&#47;system_monitor.xml
xml_file = File.join($step.plugin_dir, &quot;sample_files&quot;, &quot;system_monitor.xml&quot;)

# put the xml file into the nakogiri parser
doc = Document.new(File.new(xml_file))

# find the nodes and convert them to appropriate types
system_name = XPath.first(doc, &quot;&#47;data&#47;system&quot;).text
times 		= XPath.match(doc, &quot;&#47;data&#47;metric[@name = &apos;time&apos;]&#47;value&quot;).map{|n| Time.at n.text.to_i}
active_cpu 	= XPath.match(doc, &quot;&#47;data&#47;metric[@name = &apos;active_cpu&apos;]&#47;value&quot;).map{|n| n.text.to_i}
cpu_util 	= XPath.match(doc, &quot;&#47;data&#47;metric[@name = &apos;cpu_util&apos;]&#47;value&quot;).map{|n| n.text.to_f}
mem_util 	= XPath.match(doc, &quot;&#47;data&#47;metric[@name = &apos;mem_util&apos;]&#47;value&quot;).map{|n| n.text.to_f}
run_queue 	= XPath.match(doc, &quot;&#47;data&#47;metric[@name = &apos;run_queue&apos;]&#47;value&quot;).map{|n| n.text.to_f}
swap_util 	= XPath.match(doc, &quot;&#47;data&#47;metric[@name = &apos;swap_util&apos;]&#47;value&quot;).map{|n| n.text.to_f}

# generate the output rows 

(0...swap_util.size).each do |i|
	$output &lt;&lt; {
		&quot;system_name&quot; 	=&gt; system_name,
		&quot;times&quot; 		=&gt; times[i],
		&quot;active_cpu&quot;	=&gt; active_cpu[i],
		&quot;cpu_util&quot;		=&gt; cpu_util[i],
		&quot;mem_util&quot;		=&gt; mem_util[i],
		&quot;run_queue&quot;		=&gt; run_queue[i],
		&quot;swap_util&quot;		=&gt; swap_util[i]
	}
end

# evaluate to nil, all rows have been written 
nil
</body>
			<role>ROW_SCRIPT</role>
		</script>
	</scripts>
	<rubyVersion>RUBY_1_8</rubyVersion>
	<clearInputFields>N</clearInputFields>

	<outputFields>
		<outputField>
			<name>system_name</name>
			<type>2</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>times</name>
			<type>3</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>active_cpu</name>
			<type>5</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>cpu_util</name>
			<type>1</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>mem_util</name>
			<type>1</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>run_queue</name>
			<type>1</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>swap_util</name>
			<type>1</type>
			<update>N</update>
		</outputField>
	</outputFields>
	<rubyVariables>
	</rubyVariables>
	<infoSteps>
	</infoSteps>
	<targetSteps>
	</targetSteps>
	<gemHome/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>160</xloc>
      <yloc>149</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>output</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>368</xloc>
      <yloc>149</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
